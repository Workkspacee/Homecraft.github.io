<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Measurement</title>

  <!-- CSS and JS dependencies -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
  <link rel="stylesheet" href="/Quotation.css">

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>

  <style>
    .table-container {
      width: 100%;
      overflow-x: auto;
    }

    table {
      width: 100%;
      table-layout: fixed;
      word-wrap: break-word;
    }

    .table_cell {
      width: 100%;
      box-sizing: border-box;
    }

    .autocomplete-list {
      position: absolute;
      z-index: 9999;
      background: white;
      border: 1px solid #ccc;
      list-style: none;
      padding: 0;
      margin: 0;
      max-height: 200px;
      overflow-y: auto;
    }

    .autocomplete-list li {
      padding: 6px 10px;
      cursor: pointer;
    }

    .autocomplete-list li:hover,
    .autocomplete-list li.selected {
      background-color: #eee;
    }

    .custom-select, .hover-arrow {
      appearance: none;
    }

    .hover-arrow:hover {
      appearance: auto;
    }
  </style>

  <script> // For calculation 
    $(document).ready(function () {
        function calculateFabricRequirement(curtainType, width, height) {
            if (!curtainType || curtainType.trim() === "") {
                return 0;
            }

            curtainType = curtainType.trim().toLowerCase();

            if (curtainType === "roller") {
                return (width * height) / 144;
            }

            const multiplier = (height + 12) / 39;

            if (curtainType === "roman") {
                return Math.ceil(multiplier * Math.ceil(width / 50) * 4) / 4;
            } else {
                return Math.ceil(multiplier * Math.ceil(width / 20) * 4) / 4;
            }
        }

        function updateTotals() {
            let totalFabric = 0;
            let totalBlackout = 0;
            let roman = 0;
            let american = 0;
            let ring = 0;
            let rollerTotal = 0;
            let aluminumWidthTotal = 0;
            let ringWidthTotal = 0;

            // Get arrays of all inputs by their names (jQuery returns array-like objects)
            const curtains = $("select[name='curtain[]'], input[name='curtain[]']");
            const widths = $("input[name='width[]']");
            const heights = $("input[name='height[]']");
            const blackouts = $("input[name='blackout[]']");
            const fabricReqs = $("input[name='fabric_req[]']");
            const blackoutReqs = $("input[name='blackout_req[]']");

            // Loop through all rows based on curtains.length
            for (let i = 0; i < curtains.length; i++) {
                let curtainType = $(curtains[i]).val();
                let width = parseFloat($(widths[i]).val()) || 0;
                let height = parseFloat($(heights[i]).val()) || 0;
                let blackout = $(blackouts[i]).val().trim();

                let fabricReq = calculateFabricRequirement(curtainType, width, height);
                fabricReq = isNaN(fabricReq) ? 0 : fabricReq;

                $(fabricReqs[i]).val(fabricReq > 0 ? fabricReq.toFixed(2) : "");

                // If blackout is checked/non-empty, blackout_req equals fabricReq, else zero
                let blackoutReq = blackout !== "" ? fabricReq : 0;
                blackoutReq = isNaN(blackoutReq) ? 0 : blackoutReq;

                $(blackoutReqs[i]).val(blackout !== "" && blackoutReq > 0 ? blackoutReq.toFixed(2) : "");

                totalFabric += fabricReq;
                totalBlackout += blackoutReq;

                // Total parts calculations:
                let type = (curtainType || "").toLowerCase();
                if (type === "roman") {
                    roman += (width * height) / 144;
                }
                if (type === "american") {
                    american += Math.ceil(width / 20);
                    aluminumWidthTotal += width;
                }
                if (type === "ring") {
                    ring += Math.ceil(width / 20);
                    ringWidthTotal += width;
                }
                if (type === "roller") {
                    rollerTotal += fabricReq;
                }
            }

            // Update total fields — adjust selectors if needed
            $("#roman").val(roman.toFixed(2));
            $("#american").val(american);
            $("#ring").val(ring);
            $("input[name='total_fab_req']").val(totalFabric.toFixed(2));
            $("input[name='total_black_req']").val(totalBlackout.toFixed(2));
            $("#roller").val(rollerTotal.toFixed(2));
            $("#aluminum").val((aluminumWidthTotal / 12).toFixed(2));
            $("#ri_2").val((ringWidthTotal / 12).toFixed(2));
        }

        // Event listeners on dynamic inputs
        $(document).on("input change", "input[name='width[]'], input[name='height[]'], select[name='curtain[]'], input[name='blackout[]']", function () {
            updateTotals();
        });

        // Run initially
        updateTotals();
    });
  </script>

  <script> //for colour in type of curtain 
        function updateCurtainColor(selectElement) {
            const td = selectElement.closest('td');
            const value = selectElement.value;

            // Clear existing background
            td.style.backgroundColor = '';

            // Set background based on value
            if (value === 'American') {
                td.style.backgroundColor = 'rgb(239, 239, 95)';
            } else if (value === 'Ring') {
                td.style.backgroundColor = 'rgb(106, 170, 106)';
            } else if (value === 'Roman') {
                td.style.backgroundColor = 'rgba(79, 140, 221, 0.824)';
            }
        }

        // Trigger the color update on page load for pre-selected options
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.curtain-select').forEach(select => {
                updateCurtainColor(select);
            });
        });
  </script>

  <script>// For adding and deleting row
  $(document).ready(function () {
      const $tableBody = $('#tableBody');

      // Function to clear inputs/selects in a row
      function clearRowInputs($row) {
          $row.find('input, select').each(function () {
              if (this.tagName === 'SELECT') {
                  $(this).val(''); // clear select
              } else {
                  $(this).val(''); // clear input
              }
          });
      }

      // Add new row
      $tableBody.on('click', '.add-row', function () {
          const $currentRow = $(this).closest('tr');
          const $newRow = $currentRow.clone(false); // clone without event handlers

          clearRowInputs($newRow);

          $newRow.insertAfter($currentRow);

          // If you have an autocomplete function for fabric or other inputs, call it here
          if (typeof attachAutocomplete === 'function') {
              attachAutocomplete($newRow);
          }

          // Focus first input in new row for better UX
          $newRow.find('input, select').first().focus();

          updateDeleteButtonState();
      });

      // Delete row
      $tableBody.on('click', '.delete-row', function () {
          const $rows = $tableBody.find('tr.data-row');
          if ($rows.length > 1) {
              $(this).closest('tr').remove();
          }
          updateDeleteButtonState();
      });

      // Disable Delete buttons if only one row left
      function updateDeleteButtonState() {
          const $rows = $tableBody.find('tr.data-row');
          if ($rows.length <= 1) {
              $rows.find('.delete-row').prop('disabled', true);
          } else {
              $rows.find('.delete-row').prop('disabled', false);
          }
      }

      // Initial call to set button state
      updateDeleteButtonState();

  });
  </script>
</head>

<body>
  <div class="header1">
    <nav>
      <img src="/logo.png" alt="logo">
      <h3 style="font-weight: 700;"><a href="/logout">Log out</a></h3>
    </nav>
  </div>

  <div class="container">
    <div class="row jumbotron">
        <form class="login" method="post">
          <input type="hidden" name="forback" value="fiter">   
                <div class="row">                 
                    <!-- Work order number -->
                <div class="col-2 login__field">
                    <h6 align="center">Work order number:</h6>
                </div>  
                <div class="col-1"></div> 
                <div class="col-3 login__field">
                    <input type="text" class="login__input" name="work_no" value="<%= no.work_no %>" readonly />
                </div>

                <!-- Name -->
                <div class="col-2 login__field">
                    <h6 align="center">Name:</h6>
                </div>  
                <div class="col-1"></div> 
                <div class="col-3 login__field">
                    <input type="text" class="login__input" name="name" value="<%= no.name %>" readonly />
                </div>

                <!-- Date -->
                <div class="col-2 login__field">
                    <h6 align="center">Date:</h6>
                </div>  
                <div class="col-1"></div> 
                <div class="col-3 login__field">
                    <input type="date" class="login__input" name="date" <% if (no.date) { %> value="<%= no.date.toISOString().split('T')[0] %>" <% } %> readonly />
                </div>

                <!-- Phone no. -->
                <div class="col-2 login__field">
                    <h6 align="center">Phone no.:</h6>
                </div>  
                <div class="col-1"></div> 
                <div class="col-3 login__field">
                    <input type="text" class="login__input" name="p_no" value="<%= no.p_no %>" readonly />
                </div>

                <!-- Delivery Date -->
                <div class="col-2 login__field">
                    <h6 align="center">Delivery Date:</h6>
                </div>  
                <div class="col-1"></div> 
                <div class="col-3 login__field">
                    <input type="date" class="login__input" name="d_date" <% if (no.d_date) { %> value="<%= no.d_date.toISOString().split('T')[0] %>" <% } %> readonly />
                </div>

                <!-- Force next element to new line -->
                <div class="w-100"></div>

                <!-- Address -->
                <div class="col-2 login__field mt-2">
                    <h6 align="center">Address:</h6>
                </div>
                <div class="col-10 login__field mt-2">
                    <input type="text" class="login__input" name="add" value="<%= no.add %>" readonly />
                </div><br>


                <% if (no.map_link) { %>
                    <p>
                        <a href="<%= no.map_link %>" target="_blank">📍 View Location on Google Maps</a>
                    </p>
                <% } %>
              </div>    
              <br/>

        <div class="row">
          <div class="col-4"></div>
          <div class="col-4">
            <h3>Measurement Table</h3>
          </div>
          <div class="col-4"></div>
        </div><br/>

        <div class="table-container">
                    <table class="table table-hover table-bordered">
                        <thead class="table1">
                            <tr>
                              <th style="width: 4.378rem;">Room No.</th>
                              <th>Room Name</th>
                              <th style="width: 5.375rem;">Window No.</th>
                              <th style="width: 5.813rem;">Type of Curtain</th>
                              <th style="width: 4.375rem;">Width (in)</th>
                              <th style="width: 4.688rem;">Height (in)</th>
                              <th>Fabric</th>
                              <th style="width: 5.938rem;">Fabric Required (meter)</th>
                              <th style="width: 5.813rem;">Blackout</th>
                              <th style="width: 5.938rem;">Blackout Required (meter)</th>
                              <th style="width: 4.875rem;">Action</th>
                            </tr>
                        </thead>                                        
                         <tbody id="tableBody">
                            <% if (no && no.rows && no.rows.length > 0) { %>
                               <% for (let i = 0; i < no.rows.length; i++) { const row = no.rows[i]; %>

                                <tr class="data-row">
                                    <td><input type="number" class="table_cell" name="room_number[]" step="any" value="<%= row.room_number ?? '' %>" ></td>
                                    <td><input type="text" class="table_cell" name="room_name[]"  value="<%= row.room_name %>" ></td>
                                    <td><input type="number" class="table_cell" name="window_number[]" step="any" value="<%= row.window_number ?? '' %>" ></td>
                                    <td class="curtain-cell">
                                        <select name="curtain[]" class="table_cell hover-arrow curtain-select" onchange="updateCurtainColor(this)">
                                            <option value=""></option>
                                            <option value="American" <%= row.curtain === 'American' ? 'selected' : '' %>>American</option>
                                            <option value="Ring" <%= row.curtain === 'Ring' ? 'selected' : '' %>>Ring</option>
                                            <option value="Roman" <%= row.curtain === 'Roman' ? 'selected' : '' %>>Roman</option>
                                            <option value="Roller" <%= row.curtain === 'Roller' ? 'selected' : '' %>>Roller</option>
                                          </select>
                                    </td>
                                    <td><input type="number" class="table_cell" step="any" name="width[]" value="<%= row.width ?? '' %>"></td>
                                    <td><input type="number" class="table_cell" step="any" name="height[]" value="<%= row.height ?? '' %>"></td>
                                    <td><input type="text" class="table_cell" name="fabric[]" value="<%= row.fabric %>" autocomplete="off" readonly></td>
                                    <td><input type="number" class="table_cell" step="any" name="fabric_req[]" value="<%= row.fabric_req ?? '' %>"></td>
                                    <td><input type="number" class="table_cell" step="any" name="blackout[]" value="<%= row.blackout ?? '' %>"></td>
                                    <td><input type="number" class="table_cell" step="any" name="blackout_req[]" value="<%= row.blackout_req ?? '' %>">
                                    <input type="hidden" name="rate[]" step="any" value="<%= row.rate ?? '' %>">
                                    <input type="hidden" name="hsn[]" step="any" value="<%= row.hsn ?? '' %>">
                                    <input type="hidden" name="gst[]" step="any" value="<%= row.gst ?? '' %>"></td>
                                    <td><button type="button" class="btn btn-sm btn-success add-row">+</button> <button type="button" class="btn btn-sm btn-danger delete-row">-</button></td>
                                </tr>
                            <% } %>
                            <% } else { %>
                                <tr class="data-row">
                                  <td><input class="table_cell" step="any" type="number" name="room_number[]"></td>
                                  <td><input class="table_cell"  type="text" name="room_name[]"></td>
                                  <td><input class="table_cell" step="any" type="number" name="window_number[]"></td>
                                  <td>
                                      <select class="table_cell hover-arrow" name="curtain[]">
                                          <option></option>
                                          <option value="American">American</option>
                                          <option value="Ring">Ring</option>
                                          <option value="Roman">Roman</option>
                                          <option value="Roller">Roller</option>
                                      </select>
                                  </td>
                                  <td><input class="table_cell" type="number" step="any" name="width[]"></td>
                                  <td><input class="table_cell" type="number" step="any" name="height[]"></td>
                                  <td><input class="table_cell" type="text" name="fabric[]" autocomplete="off" readonly></td>
                                  <td><input class="table_cell" type="number" step="any" name="fabric_req[]"></td>
                                  <td><input class="table_cell" type="number" step="any" name="blackout[]"></td>
                                  <td><input class="table_cell" type="number" step="any" name="blackout_req[]">
                                  <input type="hidden" name="rate[]" step="any">
                                  <input type="hidden" name="hsn[]" step="any">
                                  <input type="hidden" name="gst[]" step="any"></td>
                                  <td><button type="button" class="btn btn-sm btn-success add-row">+</button> <button type="button" class="btn btn-sm btn-danger delete-row">-</button></td>
                                </tr>   
                            <% } %>

                            <tr class="summary-row">
                            <td></td>
                            <td>Total Parts</td>
                            <td></td>
                            <td style="background-color: rgba(79, 140, 221, 0.824);">
                              <input type="number" id="roman" name="roman" class="login__input" value="<%= no.roman %>" readonly>
                            </td>
                            <td style="background-color: rgb(239, 239, 95);"><input type="number" id="american" name="american" class="login__input" value="<%= no.american %>" readonly></td>
                            <td style="background-color: rgb(106, 170, 106);"><input type="number" id="ring" name="ring" class="login__input" value="<%= no.ring %>" readonly></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            </tr>

                            <tr class="summary-row">
                            <td></td>
                            <td>Total Fabrics</td>
                            <td></td>
                            <td style="background-color: rgb(247, 120, 35);"><input type="number" id="roller" name="roller" class="login__input" value="<%= no.roller %>" readonly></td>                            
                            <td style="background-color: rgb(239, 239, 95);"><input type="number" id="aluminum" name="aluminum" class="login__input" value="<%= no.aluminum %>" readonly></td>
                            <td style="background-color: rgb(106, 170, 106);"><input type="number" id="ri_2" name="ri_2" class="login__input" value="<%= no.ri_2 %>" readonly></td>
                            <td></td>
                            <td>
                                <input type="number" step="any" class="login__input" name="total_fab_req"  value="<%= no.total_fab_req %>" readonly>
                            </td>
                            <td></td>
                            <td>
                                <input type="number" step="any" class="login__input" name="total_black_req"  value="<%= no.total_black_req %>" readonly>
                            </td> 
                            </tr>
                        </tbody> 
                    </table><br/><br>

                    <table>
                      <tr>
                        <td>Work Order Status:</td>
                        <td>
                          <select name="w_status" class="login__input" style="width: auto;">
                            <option selected><%= no.w_status || 'Details Completed' %></option>
                            <option value="Details Completed">Details Completed</option>
                            <option value="Measurement Done">Measurement Done</option>
                            <option value="Quotation approved">Quotation Approved</option>
                            <option value="Stiching Done">Stiching Done</option>
                            <option value="Delivery Pending">Delivery Pending</option>
                            <option value="Order Delivered">Order Delivered</option>
                          </select>
                        </td>
                        <td></td>
                        <td></td>
                        <td></td>
                      </tr>
                      </table><br><br><br>

                    <center>
                        <button type="submit" class="submit" formaction="/fitter-save" > Save </button>
                        <button type="submit" class="submit" formaction="/back"> Back </button>
                    </center>
        </div>
        </form>
    </div>
 </div>

 <footer class="footer">
    <nav>
        <p>&copy; 2024 All Rights Reserved.</p>
        <p>Designed with <i class="fas fa-heart" style="color:red"></i></p>
    </nav>
</footer>
 
 <script>
  function calculateFabricRequirement(curtainType, width, height) {
    if (!curtainType || curtainType.trim() === "") return 0;
    if (curtainType.toLowerCase() === "roman") {
      return Math.ceil(((height + 12) / 39) * Math.ceil(width / 50) * 4) / 4;
    } else {
      return Math.ceil(((height + 12) / 39) * Math.ceil(width / 20) * 4) / 4;
    }
  }

  function updateTotals() {
    let totalFabric = 0, totalBlackout = 0, roman = 0, american = 0, ring = 0;

    const rows = document.querySelectorAll("#tableBody tr.data-row");

    rows.forEach(row => {
      const curtainType = row.querySelector('input[name="curtain[]"]')?.value || "";
      const width = parseFloat(row.querySelector('input[name="width[]"]')?.value) || 0;
      const height = parseFloat(row.querySelector('input[name="height[]"]')?.value) || 0;
      const blackout = row.querySelector('input[name="blackout[]"]')?.value.trim();

      const fabricReq = calculateFabricRequirement(curtainType, width, height);
      if (!isNaN(fabricReq)) {
        row.querySelector('input[name="fabric_req[]"]').value = fabricReq.toFixed(2);
      }

      const blackoutReq = blackout !== "" ? fabricReq : 0;
      if (!isNaN(blackoutReq)) {
        row.querySelector('input[name="blackout_req[]"]').value = blackoutReq > 0 ? blackoutReq.toFixed(2) : "";
      }

      totalFabric += fabricReq;
      totalBlackout += blackoutReq;

      const type = curtainType.toLowerCase();
      if (type === "roman") roman += (width * height) / 144;
      if (type === "american") american += Math.ceil(width / 20);
      if (type === "ring") ring += Math.ceil(width / 20);
    });

    document.getElementById("roman").value = roman.toFixed(2);
    document.getElementById("american").value = american;
    document.getElementById("ring").value = ring;
    document.querySelector('input[name="total_fab_req"]').value = totalFabric.toFixed(2);
    document.querySelector('input[name="total_black_req"]').value = totalBlackout.toFixed(2);
  }

  document.addEventListener("DOMContentLoaded", () => {
    const inputs = document.querySelectorAll(
      'input[name="width[]"], input[name="height[]"], input[name="curtain[]"], input[name="blackout[]"]'
    );

    inputs.forEach(input => {
      input.addEventListener("input", updateTotals);
    });

    updateTotals(); // Initial calculation
  });
</script>

</body>
</html>
